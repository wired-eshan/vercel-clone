// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DeploymentStatus {
  NOT_STARTED
  QUEUED
  BUILDING
  SUCCESSFUL
  FAILED
}

model Project {
  id           String       @id @default(uuid())
  name         String
  gitUrl       String       @map("git_url")
  customDomain String?      @map("custom_domain")
  subDomain    String       @map("sub_domain")
  Deployments  Deployment[]
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  userId       String       @map("user_id")
  user         User         @relation(fields: [userId], references: [id])
  Analytics Analytic[]
}

model Deployment {
  id        String           @id @default(uuid())
  projectId String           @map("project_id")
  project   Project          @relation(fields: [projectId], references: [id])
  status    DeploymentStatus
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  projects Project[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Analytic {
  id String @id @default(uuid())
  timestamp DateTime
  lat String?
  lon String?
  country String?
  city String?
  projectId String
  project Project @relation(fields: [projectId], references: [id])
}